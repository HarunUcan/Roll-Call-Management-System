@{
    ViewData["Title"] = "Akademisyen Yonetim Paneli";
}
<!DOCTYPE html>
<html lang="tr">

<head>

    <title>Akademisyen Yonetim Paneli</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <script src="~/lib/qrcodefolder/qrcode.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js" integrity="sha384-ZvpUoO/+PpLXR1lu4jmpXWu80pZlYUAfxl5NsBMWOEPSjUn/6Z/hRTt8+pR6L4N2" crossorigin="anonymous"></script>
</head>

<body class="bg-light">


    <nav class="navbar navbar-expand-lg navbar-light bg-dark sticky-top">
        <div class="container-fluid justify-content-between d-flex flex-row">

            <div class="navbar-nav d-flex flex-column justify-content-center align-items-center mx-3">
                <p class="fw-bolder fs-4 text-center p-0 m-0 text-white">Yoklama Yönetim</p>

            </div>
            <div class="profile d-flex flex-column justify-content-center align-items-center mx-3">
                <a href="" class="text-decoration-none text-decoration-none">
                    <div class="border border-white rounded-circle d-flex justify-content-center align-items-center"
                        style="width: 42px;height: 42px;"><i class="bi bi-person-fill"
                            style="font-size: 28px; color: white;"></i>
                    </div>
                </a>
                <p class="text-white m-0" style="font-size: 14px;">Admin</p>

            </div>
        </div>
    </nav>
    <div class="">
        <form class="d-flex flex-column align-items-center" method="POST" asp-controller="Yoklama" asp-action="Create">
            <div class="roll-call-infos">
                <div class="form-group mt-3">
                    <label for="roll-call-date">Tarih</label>
                    <input type="date" class="form-control" id="roll-call-date" style="width: 200px;" readonly>

                </div>
                <div class="form-group mt-3">
                    <label for="time-selector">Saat</label>
                    <select class="form-select" id="time-selector" name="startTime" aria-label="Default select example"
                        style="width: 200px;">
                        <option selected>Seçiniz..</option>
                        <option value="06.00">06.00</option>
                        <option value="06.30">06.30</option>
                        <option value="10.00">10.00</option>
                        <option value="10.30">10.30</option>
                        <option value="11.00">11.00</option>
                        <option value="11.30">11.30</option>
                        <option value="12.00">12.00</option>
                        <option value="12.30">12.30</option>
                        <option value="13.00">13.00</option>
                        <option value="13.30">13.30</option>
                        <option value="14.00">14.00</option>
                        <option value="14.30">14.30</option>
                        <option value="15.00">15.00</option>
                        <option value="15.30">15.30</option>
                        <option value="16.00">16.00</option>
                        <option value="16.30">16.30</option>
                        <option value="17.00">17.00</option>
                        <option value="17.30">17.30</option>
                        <option value="18.00">18.00</option>
                        <option value="18.30">18.30</option>
                        <option value="19.00">19.00</option>
                        <option value="19.30">19.30</option>
                        <option value="20.00">20.00</option>
                        <option value="20.30">20.30</option>
                        <option value="21.00">21.00</option>
                        <option value="21.30">21.30</option>
                        <option value="22.00">22.00</option>
                        <option value="22.30">22.30</option>
                        <option value="23.00">23.00</option>
                        <option value="23.30">23.30</option>
                    </select>
                </div>

                <div class="form-group mt-3">
                    <label for="instructor-selector">Akademisyen</label>
                    @Html.DropDownList("Instructors", (IEnumerable<SelectListItem>)ViewBag.Akademisyen, "Seçiniz..", new
                        {
                            @class = "form-select",
                            @id = "instructor-selector",
                            @style = "width: 200px;",
                            @oninput = "getInstructorLessons();",
                            @name = "instructorId"
                        })
                </div>
                <div class="form-group mt-3">
                    <label for="lesson-department-selector">Ders Adı</label>
                    <select class="form-select" id="lesson-department-selector" name="lessonName"
                        aria-label="Default select example" style="width: 200px;" disabled>
                        <option selected>Seçiniz..</option>
                    </select>
                </div>
            </div>
            <div class="mt-4 border border-dark border-3 p-2">
                <p class="m-0" hidden>QRCode</p>
                <div id="qrcode"></div>
            </div>

            <div class="mt-3 shadow rounded-3 d-flex justify-content-center align-items-center border border-secondary"
                style="width: 100px; height: 40px; background-color: white;">
                <p class="text-danger m-0 fw-bolder fs-5" id="timer">20:00</p>
            </div>

            <p class="text-danger mt-3" id="activation-code">Aktivasyon Kodu :</p>

            <button type="submit" class="btn btn-success mt-2 w-50" id="btn-creator">Yoklama Oluştur</button>
            <button type="button" class="btn btn-warning mt-2 w-50" id="btn-finisher" onclick="finishRollCall()"
                disabled>Yoklamayı Bitir</button>
            <button type="button" class="btn btn-danger mt-2 mb-5 w-50" id="btn-remover" onclick="deleteRollCall()"
                disabled>Yoklamayı
                Sil</button>

        </form>



        <script type="text/javascript">

            var url = "https://192.168.1.16:6010/";

            if ("@ViewBag.State" == 1) {
                alert("Yoklama Başarılı Bir Şekilde Oluşturuldu..");
                document.getElementById('btn-creator').setAttribute('disabled', 'true');
                document.getElementById('btn-finisher').removeAttribute('disabled');
                document.getElementById('btn-remover').removeAttribute('disabled');

                timeCounter();
            }
            else if ("@ViewBag.State" == 2) {
                alert("Yoklama Başarılı Bir Şekilde Silindi..");
            }
            else if ("@ViewBag.State" == 3) {
                alert("Yoklama Oluşturulamadı. Lütfen Geçerli Bir Saat Giriniz..");
            }
             else if ("@ViewBag.State" == 4) {
                alert("Yoklama Oluşturulamadı. Lütfen Geçerli Veri Giriniz.");
            }



            document.getElementById('roll-call-date').value = new Date().toISOString().substring(0, 10)


            new QRCode(document.getElementById("qrcode"), {
                text: url + "ogrenci-giris?code=" + "@ViewBag.ActivationCode",
                width: 150,
                height: 150,
                colorDark: 'black',
                colorLight: 'white',
                correctLevel: QRCode.CorrectLevel.H
            });
            document.getElementById("activation-code").innerText = "Aktivasyon Kodu : " + "@ViewBag.ActivationCode";


            function getInstructorLessons() {
                var instructorId = document.getElementById("instructor-selector").value;

                var urlAction = '@Url.Action("DersGetir", "Akademisyen")' + '?instructorId=' + encodeURIComponent(document.getElementById("instructor-selector").value);

                if (instructorId != "") {
                    document.getElementById("lesson-department-selector").disabled = false;
                    fetch(urlAction, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    })
                        .then((response) => response.json())
                        .then((data) => {
                            console.log('Success:', data);
                            document.getElementById("lesson-department-selector").disabled = false;

                            document.getElementById('lesson-department-selector').innerHTML = "";
                            data.forEach(element => {
                                var option = document.createElement("option");
                                option.text = element;
                                option.value = element;
                                document.getElementById('lesson-department-selector').add(option);
                            });
                        })
                        .catch((error) => {
                            console.error('Error:', error);

                        });
                }
                else {
                    document.getElementById("lesson-department-selector").disabled = true;
                    document.getElementById('lesson-department-selector').innerHTML = "";
                    var option = document.createElement("option");
                    option.text = "Seçiniz..";
                    option.value = "Seçiniz..";
                    document.getElementById('lesson-department-selector').add(option);
                }
            }

            function deleteRollCall() {
                //get
                var urlAction = '@Url.Action("Delete", "Yoklama")' + '?activationCode=' + "@ViewBag.ActivationCode";
                console.log("basıldı");
                fetch(urlAction, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data == true) {
                            alert("Yoklama Başarılı Bir Şekilde Silindi..");
                            window.location.href = url + "akademisyen-yonetim";
                        }
                    })
                    .catch((error) => {
                        console.error('Error:', error);

                    });

            }
            function finishRollCall() {
                //get
                var urlAction = '@Url.Action("Finish", "Yoklama")' + '?activationCode=' + "@ViewBag.ActivationCode";
                console.log("basıldı");
                fetch(urlAction, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data == true) {
                            alert("Yoklama Başarılı Bir Şekilde Bitirildi..");
                            window.location.href = url + "akademisyen-yonetim";
                        }
                    })
                    .catch((error) => {
                        console.error('Error:', error);

                    });

            }
            var remainingTime = 0;
            var remainingTimeMinutes = 0;
            var remainingTimeSeconds = 0;
            function timeCounter() {
                var urlAction = '@Url.Action("RemainingTime", "Yoklama")' + '?activationCode=' + "@ViewBag.ActivationCode";
                fetch(urlAction, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                    .then((response) => response.json())
                    .then((data) => {
                        const timeArr = data.split(":");
                        remainingTimeMinutes = parseInt(timeArr[0]);
                        remainingTimeSeconds = parseInt(timeArr[1]);

            @* document.getElementById("timer").innerText = data; *@
                            remainingTime = setInterval(timeCounterPrinter, 1000);
                    })
                    .catch((error) => {
                        console.error('Error:', error);

                    });
            }

            function timeCounterPrinter() {
                if (remainingTimeSeconds == 0) {
                    remainingTimeMinutes--;
                    remainingTimeSeconds = 59;
                }
                else {
                    remainingTimeSeconds--;
                }
                if (remainingTimeMinutes == 0 && remainingTimeSeconds == 0) {
                    clearInterval(interval);
                    document.getElementById('btn-creator').removeAttribute('disabled');
                    document.getElementById('btn-finisher').setAttribute('disabled', 'true');
                    document.getElementById('btn-remover').setAttribute('disabled', 'true');
                    document.getElementById("timer").innerText = "00:00";
                }
                else {
                    document.getElementById("timer").innerText = (remainingTimeMinutes < 10 ? "0" + remainingTimeMinutes : remainingTimeMinutes) + ":" + (remainingTimeSeconds < 10 ? "0" + remainingTimeSeconds : remainingTimeSeconds);
                }
            }

        </script>

    </div>


</body>

</html>